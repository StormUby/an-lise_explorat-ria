import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats

# Carregar o arquivo CSV
# Altere o caminho do arquivo para o local do seu .csv
df = pd.read_csv('healthcare_dataset.csv')

# Mostrar as primeiras linhas do DataFrame
print("Primeiras linhas do DataFrame:")
print(df.head())

# Informações gerais sobre o DataFrame
print("\nInformações gerais do DataFrame:")
print(df.info())

# Estatísticas descritivas das colunas numéricas
print("\nEstatísticas descritivas das colunas numéricas:")
print(df.describe())

# Verificar valores ausentes
print("\nVerificação de valores ausentes:")
print(df.isnull().sum())


# Histograma das colunas numéricas
print("\nPlotando histogramas das colunas numéricas:")
df.hist(figsize=(10, 8), bins=20, edgecolor='black')
plt.tight_layout()
plt.show()


# Boxplots para detectar outliers
print("\nPlotando boxplots para detectar outliers:")
plt.figure(figsize=(12, 6))
df.plot(kind='box', subplots=True, layout=(2, 4), sharex=False, sharey=False, figsize=(12, 8))
plt.tight_layout()
plt.show()

# Análise de distribuição com KDE e QQ Plot
for column in df.select_dtypes(include=['float64', 'int64']).columns:
    plt.figure(figsize=(14, 6))
    
    # Distribuição com KDE
    plt.subplot(1, 2, 1)
    sns.kdeplot(df[column], shade=True)
    plt.title(f'Distribuição de {column} com KDE')
    
    # QQ Plot
    plt.subplot(1, 2, 2)
    stats.probplot(df[column].dropna(), dist="norm", plot=plt)
    plt.title(f'QQ Plot de {column}')
    
    plt.show()
